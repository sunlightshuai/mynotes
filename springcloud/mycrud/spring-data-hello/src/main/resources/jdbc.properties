#driverClassName=com.mysql.jdbc.Driver
#spring.datasource.type=com.alibaba.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://192.168.0.129:3306/test_guoxin?useUnicode=true&characterEncoding=utf-8&useSSL=true&rewriteBatchedStatements=true
spring.datasource.username=root
spring.datasource.password=HYodUXeuc4eMV3l0ZxXY97+d9kcPwOQdnMYRoLoXCaDqDnnit1nrC4Du588DN71XeIgKZdyXahwvHKMAaQ8bfw==

# 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
spring.datasource.initialSize=10
# 最小连接池数量
spring.datasource.minIdle=6
# 最大连接池数量
spring.datasource.maxActive=50
# 获取连接时最大等待时间，单位毫秒。
spring.datasource.maxWait=60000
# 1) Destroy线程会检测连接的间隔时间 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
spring.datasource.timeBetweenEvictionRunsMillis=60000
# Destory线程中如果检测到当前连接的最后活跃时间和当前时间的差值大于minEvictableIdleTimeMillis，则关闭当前连接。
spring.datasource.minEvictableIdleTimeMillis=300000
# 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
spring.datasource.testWhileIdle=true
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.testOnReturn=false
# 是否缓存preparedStatement，也就是PSCache。
spring.datasource.poolPreparedStatements=false
# 监控统计用的filter:stat   日志用的filter:log4j    防御sql注入的filter:wall
# configFilter用来加密密码
spring.datasource.filters=config
spring.datasource.basePackage=com.mydata.mapper
spring.datasource.connectionProperties=config.decrypt=true;config.decrypt.key=${spring.datasource.public.key};stat.mergeSql=true;stat.slowSqlMillis=5000



#spring.datasource.password-callback=com.mydata.config.DbPasswordCallback
# 公钥
spring.datasource.public.key=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJTCFkDTmJYB7MBOB3If+aJtPBG1+49773Qbtpe5OFRp7UOum7PjZiVWgrf3JYNlKZtAIqQo7L5hzL9ZEbpXub0CAwEAAQ==
spring.datasource.config.enabled=true

spring.datasource.config.key=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJTCFkDTmJYB7MBOB3If+aJtPBG1+49773Qbtpe5OFRp7UOum7PjZiVWgrf3JYNlKZtAIqQo7L5hzL9ZEbpXub0CAwEAAQ==|MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAlMIWQNOYlgHswE4Hch/5om08EbX7j3vvdBu2l7k4VGntQ66bs+NmJVaCt/clg2Upm0AipCjsvmHMv1kRule5vQIDAQABAkAkajqeVe31UrVNAgzqkA9BBrJ8t2rEXhdo+dvB2nKCnyf2kXjJzAdAPrsP4QMq2kcPvJb8QLIuioXhqi+bp2eBAiEAy9ptkubkhlGSDal/GoU2SA2uhg0ZQjVnCjWDrZgpl2ECIQC6z7EYc023uP3dtaJsnuVmYTrC9BikoI2K7MQ/tLrr3QIhAMBJBvZ8aK7yHmxYpxXi9bK9hRPZIyw6pzkQBWcnkoPBAiBosedldZFzyrh0Hcx2paKY+xrMkbKR6O0Kk+D0dxxe/QIgA9HeT4PZTIANfo0QRyMi5sG2fvkfBhYf3f68gXK6Pgs=
# PSCache的数量
spring.datasource.maxOpenPreparedStatements=60

mybatis.mapperLocations=classpath:mapping/*.xml




